user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format with upstream info
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" upstream: $upstream_addr '
                    'upstream_status: $upstream_status';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    # Upstream configuration for Blue/Green deployment
    upstream backend {
        # Primary server (active pool)
        server app_blue:3000 max_fails=2 fail_timeout=5s;
        
        # Backup server (automatically used when primary fails)
        server app_green:3000 backup;
        
        # Keep connections alive for better performance
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;

        # Tight timeouts for fast failover detection
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;

        # Enable retries on errors
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 5s;

        # Preserve original headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # HTTP 1.1 for keepalive
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Main application endpoints
        location / {
            proxy_pass http://backend;
            
            # DO NOT strip upstream headers
            # Forward X-App-Pool and X-Release-Id unchanged
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
            
            # Add upstream info for debugging
            add_header X-Upstream-Addr $upstream_addr always;
            add_header X-Upstream-Status $upstream_status always;
        }

        # Health check endpoint
        location /healthz {
            proxy_pass http://backend/healthz;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        # Version endpoint
        location /version {
            proxy_pass http://backend/version;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        # Chaos endpoints (for testing)
        location /chaos/ {
            proxy_pass http://backend;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network
            deny all;
        }
    }
}
