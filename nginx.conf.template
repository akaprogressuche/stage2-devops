user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;
    keepalive_timeout 65;

    # ===== Map upstream to pool and release =====
    # Blue is primary, Green is backup
    map $upstream_addr $pool {
        default "blue";
        # optionally map green IP if needed
    }

    map $upstream_addr $release {
        default "blue-v1.0.0";
        # optionally map green IP if needed
    }

    # ===== Custom log format =====
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        'pool=$pool '
                        'release=$release '
                        'upstream_status=$upstream_status '
                        'upstream=$upstream_addr '
                        'request_time=$request_time '
                        'upstream_response_time=$upstream_response_time';

    access_log /var/log/nginx/access.log detailed;
    # access_log /var/log/nginx/access_real.log detailed;

    # ===== Upstream servers =====
    upstream backend {
        server app_blue:3000 max_fails=2 fail_timeout=5s;
        server app_green:3000 backup;
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;

        # Timeouts for fast failover
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;

        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 5s;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # ===== Main application endpoints =====
        location / {
            proxy_pass http://backend;

            # Forward headers
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;

            add_header X-Upstream-Addr $upstream_addr always;
            add_header X-Upstream-Status $upstream_status always;
        }

        location /healthz {
            proxy_pass http://backend/healthz;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        location /version {
            proxy_pass http://backend/version;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        location /chaos/ {
            proxy_pass http://backend;
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
        }

        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network
            deny all;
        }
    }
}
