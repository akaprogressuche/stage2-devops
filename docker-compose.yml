services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - PORT=3000
      - APP_POOL=blue
      - RELEASE_ID=blue-v1.0.0
    ports:
      - "8081:3000"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - PORT=3000
      - APP_POOL=green
      - RELEASE_ID=green-v1.0.0
    ports:
      - "8082:3000"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
    networks:
      - app_network
    depends_on:
      app_blue:
        condition: service_healthy
      app_green:
        condition: service_healthy
    restart: unless-stopped

  alert_watcher:
    build:
      context: ./watcher
    container_name: alert_watcher
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ACTIVE_POOL=${ACTIVE_POOL:-blue}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
    volumes:
      - ./logs:/var/log/nginx:ro
    networks:
      - app_network
    depends_on:
      - nginx
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  nginx_logs: